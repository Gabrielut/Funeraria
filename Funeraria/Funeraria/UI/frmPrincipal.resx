<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnlLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAB4AAAAQ4CAMAAADfDTFxAAAABGdBTUEAALGPC/xhBQAAAitQTFRF+vr6
        9PT0xMXHyMnL9vb29fX1sbO2+fn5+Pj49/f32drbtbe5ubu9tri6x8jKs7W38vLy8/Pz4OHizM3PtLa4
        6enquLq83d7fxcbIycrMsbO16urr1tfY2tvc3t/gxsfJysvNsrS219jZ29zdy8zOsrS3z9DSt7m71NXW
        8fHx2Nna3N3e6+vsury+6Ojp7e3u7u7v7Oztu72/tLW4s7W40dLT0NHTuLm81dbX8fHywcLEwMLE4eLj
        sbK1tba56uvr0tPUubq9wsPFwcPFsrO2tre609TV0tPVuru+8PDww8TGwsTG3+Dhs7S3t7i78PDx4uLj
        5eXmvL7A5ubnzc7Qvb/B4uPk5+fozs/R7+/wv8DCvsDC4+TlwMHDw8XH4eHi6erq3t7ftLa50dLU39/g
        4ODh6Onp0NHS09TWz9DR7/Dw5ebm7e7uvb7AvL3A9fb25ufnzs/Q7+/v7u/vvr/Bvb7B8vPz8vLz9vb3
        4+Pk5+jo6+zs8/P05OXl5OTl7O3tu7y/v8HD9PT13Nze+Pj5yMrLzM7Pt7m81dXX1NXX8fLy2dnbxcfI
        xMbI+fn6ysvMycvM1tbY1dbY29vc2trcxsjJxcfJyszNtbe61tfZ3Nzd9/j49/f4x8nKzM3Oy83Otri7
        8PHx2Nja19ja3d3ewMHEzc7P5OXm7u7u9fX25ebnzc/Q9vf34+Tk5ufo7Ozsu7y+vr/C8/T05+jp7e3t
        vL2/v8DD9PX1sLK1ukkAfwAAEPdJREFUeF7t1dcCAAIBBdDbHkYko0RIRXuXoiG0J9ql0rAjoqW0aJEo
        opSUkaJB6fP6i3tfzvmJk/8BAHU5DQCoEzAADAgYAAbyHACgTsAAMCBgABgQMAAM5MkAQJ2AAWBAwAAw
        IGAAGBAwAAwIGAAGcgYAUCdgABgQMAAM5HgAoE7AADAgYAAYEDAADOQFAECdgAFgQMAAMCBgABjI+wGA
        OgEDwICAAWAgzwAA6gQMAAMCBoABAQPAgIABYCCvBQDqBAwAAwIGgIG8BgCoEzAADAgYAAbyLACgTsAA
        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
        QmCC
</value>
  </data>
</root>